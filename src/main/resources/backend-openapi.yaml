openapi: 3.1.0
info:
  title: GPB IT Factory Mini-Bank (backend)
  version: 2.0.0

paths:
  /users:
    post:
      operationId: createUser
      summary: Создать нового пользователя
      deprecated: true
      tags: [users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '204':
          description: Пользователь создан
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v2/users:
    post:
      operationId: createUserV2
      summary: Создать нового пользователя (v2)
      tags: [users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestV2'
      responses:
        '204':
          description: Пользователь создан
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV2'

  /users/{id}:
    get:
      operationId: getUserByTelegramId
      deprecated: true
      summary: Получить пользователя по идентификатору в Telegram
      tags: [users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            example: 467385
          description: Идентификатор искомого пользователя
      responses:
        '200':
          description: Данные о пользователе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v2/users/{id}:
    get:
      operationId: getUserByTelegramIdV2
      summary: Получить пользователя по идентификатору в Telegram (V2)
      tags: [users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            example: 467385
          description: Идентификатор искомого пользователя
      responses:
        '200':
          description: Данные о пользователе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseV2'
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV2'

  /v2/users/{tg-username}:
    get:
      operationId: getUserByTelegramUsernameV2
      summary: Получить пользователя по username в Telegram
      tags: [users]
      parameters:
        - in: path
          name: tg-username
          required: true
          schema:
            type: string
            example: vrvaganov
          description: Username в Telegram искомого пользователя
      responses:
        '200':
          description: Данные о пользователе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseV2'
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV2'

  /users/{id}/accounts:
    post:
      operationId: createUserAccount
      summary: Открыть новый счёт для пользователя
      deprecated: true
      tags: [accounts]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            example: 356789
          description: Идентификатор пользователя в Telegram
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '204':
          description: Счёт создан
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: getUserAccounts
      summary: Получить счета пользователя
      deprecated: true
      tags: [accounts]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            example: 356789
          description: Идентификатор пользователя в Telegram
      responses:
        '200':
          description: Список счетов пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListResponse'
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v2/users/{id}/accounts:
    post:
      operationId: createUserAccountV2
      summary: Открыть новый счёт для пользователя (V2)
      tags: [accounts]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            example: 356789
          description: Идентификатор пользователя в Telegram
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequestV2'
      responses:
        '204':
          description: Счёт создан
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV2'
    get:
      operationId: getUserAccountsV2
      summary: Получить счета пользователя (V2)
      tags: [accounts]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            example: 356789
          description: Идентификатор пользователя в Telegram
      responses:
        '200':
          description: Список счетов пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListResponseV2'
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV2'

  /transfers:
    post:
      operationId: createTransfer
      summary: Создать перевод со счёта пользователя на счёт другого пользователя
      deprecated: true
      tags: [transfers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
      responses:
        '200':
          description: Перевод совершён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v2/transfers:
    post:
      operationId: createTransferV2
      summary: Создать перевод со счёта пользователя на счёт другого пользователя (V2)
      tags: [transfers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequestV2'
      responses:
        '200':
          description: Перевод совершён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponseV2'
        default:
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV2'

components:
  schemas:
    CreateUserRequest:
      type: object
      description: Запрос на создание нового пользователя
      properties:
        userId:
          description: Идентификатор пользователя в Telegram
          type: integer
          format: int64
          example: 348741706
    CreateUserRequestV2:
      type: object
      description: Запрос на создание нового пользователя (V2)
      properties:
        userId:
          description: Идентификатор пользователя в Telegram
          type: integer
          format: int64
          example: 348741706
        userName:
          description: Username пользователя в Telegram
          type: string
          example: vrvaganov
      required:
        - userId
        - userName
    UserResponse:
      type: object
      description: Информация о пользователе
      properties:
        userId:
          description: Идентификатор пользователя в backend-сервисе
          type: string
          format: uuid
          example: 2d7b7a7a-680e-422e-9cc3-23c68e2ff398
    UserResponseV2:
      type: object
      description: Информация о пользователе (V2)
      properties:
        userId:
          description: Идентификатор пользователя в backend-сервисе
          type: string
          format: uuid
          example: 2d7b7a7a-680e-422e-9cc3-23c68e2ff398
      required:
        - userId
    CreateAccountRequest:
      type: object
      description: Запрос на создание нового счёта
      properties:
        accountName:
          type: string
          example: 'My first awesome account'
    CreateAccountRequestV2:
      type: object
      description: Запрос на создание нового счёта (V2)
      properties:
        accountName:
          type: string
          example: 'My first awesome account'
      required:
        - accountName
    AccountsListResponse:
      type: array
      description: Список счетов пользователя
      items:
        type: object
        properties:
          accountId:
            type: string
            format: uuid
            example: 52d2ef91-0b62-4d43-bb56-e7ec542ba8f8
          accountName:
            type: string
            example: 'Деньги на шашлык'
          amount:
            type: string
            format: number
            example: '203605.20'
    AccountsListResponseV2:
      type: array
      description: Список счетов пользователя (V2)
      items:
        type: object
        properties:
          accountId:
            type: string
            format: uuid
            example: 52d2ef91-0b62-4d43-bb56-e7ec542ba8f8
          accountName:
            type: string
            example: 'Деньги на шашлык'
          amount:
            type: string
            format: number
            example: '203605.20'
        required:
          - accountId
          - accountName
          - amount
    CreateTransferRequest:
      type: object
      description: Запрос на перевод со счёта пользователя на другой
      properties:
        from:
          type: integer
          format: int64
          example: 348741706
        to:
          type: integer
          format: int64
          example: 332123211
        amount:
          type: string
          format: number
          example: '203605.20'
    CreateTransferRequestV2:
      type: object
      description: Запрос на перевод со счёта пользователя на другой (V2)
      properties:
        from:
          type: string
          example: vrvaganov
        to:
          type: string
          example: paveldurov
        amount:
          type: string
          format: number
          example: '203605.20'
      required:
        - from
        - to
        - amount
    TransferResponse:
      type: object
      description: Информация о переводе
      properties:
        transfer_id:
          type: string
          format: uuid
          example: 52d2ef91-0b62-4d43-bb56-e7ec542ba8f8
    TransferResponseV2:
      type: object
      description: Информация о переводе (V2)
      properties:
        transferId:
          type: string
          format: uuid
          example: 52d2ef91-0b62-4d43-bb56-e7ec542ba8f8
      required:
        - transferId
    Error:
      type: object
      description: Формат непредвиденной ошибки
      properties:
        message:
          type: string
          example: Произошло что-то ужасное, но станет лучше, честно
        type:
          type: string
          example: GeneralError
        code:
          type: string
          example: '123'
        trace_id:
          type: string
          format: uuid
          example: 5f59e024-03c7-498d-9fc9-b8b15fd49c47
    ErrorV2:
      type: object
      description: Формат непредвиденной ошибки (V2)
      properties:
        message:
          type: string
          example: Произошло что-то ужасное, но станет лучше, честно
        type:
          type: string
          example: GeneralError
        code:
          type: string
          example: '123'
        traceId:
          type: string
          format: uuid
          example: 5f59e024-03c7-498d-9fc9-b8b15fd49c47
      required:
        - message
        - type
        - code
        - traceId
tags:
  - name: users
    description: Операции с пользователями
  - name: accounts
    description: Операции со счетами пользователей
  - name: transfers
    description: Операции, связанные с переводами между счетами